{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshita\\\\Desktop\\\\InfosysSpringBordInternship\\\\front-end\\\\src\\\\components\\\\ComplaintForm.js\",\n  _s = $RefreshSig$();\n// client/src/components/ComplaintForm.js\nimport React, { useState } from \"react\";\nimport api, { authHeaders } from \"../api/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComplaintForm() {\n  _s();\n  const [category, setCategory] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [urgency, setUrgency] = useState(\"Low\");\n  const [file, setFile] = useState(null);\n  const [anonymous, setAnonymous] = useState(true);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"category\", category);\n    formData.append(\"description\", description);\n    formData.append(\"urgency\", urgency);\n    formData.append(\"anonymous\", anonymous ? \"true\" : \"false\");\n    if (file) formData.append(\"file\", file);\n    try {\n      // if user wants anonymous: do not send Authorization header\n      const headers = anonymous ? {\n        \"Content-Type\": \"multipart/form-data\"\n      } : {\n        ...authHeaders(),\n        \"Content-Type\": \"multipart/form-data\"\n      };\n      await api.post(\"/complaints\", formData, {\n        headers\n      });\n      alert(\"Complaint submitted\");\n      // reset\n      setCategory(\"\");\n      setDescription(\"\");\n      setFile(null);\n      setUrgency(\"Low\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error submitting\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Category\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Urgency\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: urgency,\n        onChange: e => setUrgency(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Attach file (optional)\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Submit as anonymous:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: anonymous,\n        onChange: e => setAnonymous(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Complaint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ComplaintForm, \"44ppEhlxuWcyBUbq/SOU/m2O06k=\");\n_c = ComplaintForm;\nvar _c;\n$RefreshReg$(_c, \"ComplaintForm\");","map":{"version":3,"names":["React","useState","api","authHeaders","jsxDEV","_jsxDEV","ComplaintForm","_s","category","setCategory","description","setDescription","urgency","setUrgency","file","setFile","anonymous","setAnonymous","handleSubmit","e","preventDefault","formData","FormData","append","headers","post","alert","err","_err$response","_err$response$data","response","data","message","onSubmit","children","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","type","files","checked","_c","$RefreshReg$"],"sources":["C:/Users/Harshita/Desktop/InfosysSpringBordInternship/front-end/src/components/ComplaintForm.js"],"sourcesContent":["// client/src/components/ComplaintForm.js\r\nimport React, { useState } from \"react\";\r\nimport api, { authHeaders } from \"../api/axios\";\r\n\r\nexport default function ComplaintForm() {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [urgency, setUrgency] = useState(\"Low\");\r\n  const [file, setFile] = useState(null);\r\n  const [anonymous, setAnonymous] = useState(true);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"category\", category);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"urgency\", urgency);\r\n    formData.append(\"anonymous\", anonymous ? \"true\" : \"false\");\r\n    if (file) formData.append(\"file\", file);\r\n\r\n    try {\r\n      // if user wants anonymous: do not send Authorization header\r\n      const headers = anonymous\r\n        ? { \"Content-Type\": \"multipart/form-data\" }\r\n        : { ...authHeaders(), \"Content-Type\": \"multipart/form-data\" };\r\n      await api.post(\"/complaints\", formData, { headers });\r\n      alert(\"Complaint submitted\");\r\n      // reset\r\n      setCategory(\"\");\r\n      setDescription(\"\");\r\n      setFile(null);\r\n      setUrgency(\"Low\");\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Error submitting\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Category\r\n        <input\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Description\r\n        <textarea\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Urgency\r\n        <select value={urgency} onChange={(e) => setUrgency(e.target.value)}>\r\n          <option>Low</option>\r\n          <option>Medium</option>\r\n          <option>High</option>\r\n        </select>\r\n      </label>\r\n      <label>\r\n        Attach file (optional)\r\n        <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      </label>\r\n      <label>\r\n        Submit as anonymous:\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={anonymous}\r\n          onChange={(e) => setAnonymous(e.target.checked)}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Submit Complaint</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}